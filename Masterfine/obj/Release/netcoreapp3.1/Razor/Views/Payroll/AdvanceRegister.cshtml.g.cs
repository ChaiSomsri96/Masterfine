#pragma checksum "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "51964d0c955292dce28d14351d8d42afcef0b40b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Payroll_AdvanceRegister), @"mvc.1.0.view", @"/Views/Payroll/AdvanceRegister.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\_ViewImports.cshtml"
using ASPNET_Core_3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
using System.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"51964d0c955292dce28d14351d8d42afcef0b40b", @"/Views/Payroll/AdvanceRegister.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"60f8273389c73ee67b936bf8b94df025c2d5af05", @"/Views/_ViewImports.cshtml")]
    public class Views_Payroll_AdvanceRegister : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/dataTables/datatables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/sweetalert/dist/sweetalert.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Development,Staging,Production", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/dataTables/datatables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/dataTables/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/sweetalert/dist/sweetalert.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
  
    ViewData["Title"] = "AdvanceRegister";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 6 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
 using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                            
}

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"row wrapper border-bottom white-bg page-heading\">\r\n    <div class=\"col-lg-10\">\r\n        <h2>Advance</h2>\r\n        <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n                <a");
            BeginWriteAttribute("href", " href=\"", 412, "\"", 446, 1);
#nullable restore
#line 15 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
WriteAttributeValue("", 419, Url.Action("Main", "Home"), 419, 27, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">Home</a>
            </li>
            <li class=""breadcrumb-item"">
                <a>Payroll</a>
            </li>
            <li class=""active breadcrumb-item"">
                <strong>Advance Register</strong>
            </li>
        </ol>
    </div>
    <div class=""col-lg-2"">

    </div>
</div>
<div class=""wrapper wrapper-content animated fadeInRight"">
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""ibox"">
                <div class=""ibox-title"">
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-down""></i>
                        </a>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"" style=""display:none;"">
                    <div class=""modal-body"">
                        <");
            WriteLiteral(@"div class=""row"">
                            <div class=""col-lg-6"">
                                <div class=""form-group"">
                                    <label>Advance Voucher No.</label>
                                    <input type=""text"" id=""advanceVoucherNo"" class=""form-control"" required>
                                </div>
                                <div class=""form-group"">
                                    <label>Employee Name</label>
                                    <input type=""text""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 1998, "\"", 2012, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""employeeName"" class=""form-control"">
                                </div>
                                <div class=""form-group"">
                                    <label>Voucher Type</label>
                                    <select name=""voucherType"" class=""form-control"" id=""voucherType"">
                                    </select>
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <br />
                                <br />
                                <div class=""form-group"">
                                    <label>Employee Code</label>
                                    <input type=""text""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 2754, "\"", 2768, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""employeeCode"" class=""form-control"" required>
                                </div>
                                <div class=""form-group"">
                                    <label>Salary Month</label>
                                    <input type=""month""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 3038, "\"", 3052, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"form-control\"");
            BeginWriteAttribute("value", " value=\"", 3074, "\"", 3100, 1);
#nullable restore
#line 70 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
WriteAttributeValue("", 3082, ViewData["month"], 3082, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" id=""salaryMonth"" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                          <button type=""button"" class=""btn btn-info"" id=""btn_Search"">Search</button>
                          <button type=""button"" class=""btn btn-info"" id=""btn_Clear"">Clear</button>
                    </div>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">                                        
  ");
            WriteLiteral(@"                  <table class=""table table-striped table-bordered table-hover dataTables-advanceReg"">
                        <thead>
                            <tr>
                                <th>Sl No</th>
                                <th>Voucher Name</th>
                                <th>Employee Code</th>
                                <th>Employee</th>
                                <th>Month</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>                            
                        </tbody>
                    </table>
                    <div class=""modal inmodal fade"" id=""advanceModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
                        <div class=""modal-dialog modal-lg"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <button type=""butto");
            WriteLiteral(@"n"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">&times;</span><span class=""sr-only"">Close</span></button>
                                    <h4 class=""modal-title"">Advance Payment</h4>
                                    <small class=""font-bold"">Create advance</small>
                                </div>
                                <div class=""modal-body"">
                                    <div class=""row"">
                                        <div class=""col-lg-6"">
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Advance Voucher No.</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""text"" id=""new_voucherNo"" class=""form-control"" required>
                                ");
            WriteLiteral(@"                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Employee Name</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <select name=""employeeName"" id=""new_employeeName"" class=""form-control"" required>
                                                    </select>
                                                </div>
                                                <a type=""button"" class=""btn btn-info""");
            BeginWriteAttribute("href", " href=\"", 6945, "\"", 6975, 1);
#nullable restore
#line 134 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
WriteAttributeValue("", 6952, Url.Action("Employee"), 6952, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" target=""_blank"">+</a>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Salary Month</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""month"" id=""new_salaryMonth"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Cheque No.</label>
                                                </div>
                                                <div class=""col-lg-10"">
   ");
            WriteLiteral(@"                                                 <input type=""text"" id=""new_chequeNo"" class=""form-control"">
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""col-lg-6"">
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Date</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""date"" id=""new_date"" class=""form-control"" required>
                                                </div>                                                    
                                            </div>
                                            <div class=""form-group ro");
            WriteLiteral(@"w"">
                                                <div class=""col-lg-12"">
                                                    <label>Amount</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""number"" id=""new_amount"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Cash / Bank / a/c</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <select id=""new_cashOrBank"" class=""form-control"" required>
                                       ");
            WriteLiteral("             </select>\r\n                                                </div>\r\n                                                <a type=\"button\" class=\"btn btn-info\"");
            BeginWriteAttribute("href", " href=\"", 10213, "\"", 10243, 1);
#nullable restore
#line 178 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
WriteAttributeValue("", 10220, Url.Action("Employee"), 10220, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" target=""_blank"">+</a>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Cheque Date</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""date"" id=""new_chequeDate"" class=""form-control"">
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Narration</label>
                                                </div>
                                                <div class=""col-lg-10"">
                ");
            WriteLiteral(@"                                    <textarea name=""narration"" id=""new_narration"" class=""form-control""></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""btn btn-white"" data-dismiss=""modal"">Close</button>
                                    <button type=""button"" class=""btn btn-primary"" id=""new_save"">Save</button>
                                    <button type=""button"" class=""btn btn-primary"" id=""new_clear"">Clear</button>
                                </div>                                
                            </div>
                        </div>
                    </div>
                    <div class=""modal inmodal fade"" id=""advanceEdit"" tabindex=""-1"" role=""dialog"" ar");
            WriteLiteral(@"ia-hidden=""true"">
                        <div class=""modal-dialog modal-lg"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <button type=""button"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">&times;</span><span class=""sr-only"">Close</span></button>
                                    <h4 class=""modal-title"">Edit or view Advance</h4>
                                    <small class=""font-bold"">Edit view Advance</small>
                                </div>
                                <div class=""modal-body"">
                                    <div class=""row"">
                                        <div class=""col-lg-6"">
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Advance Voucher No.</label>
                       ");
            WriteLiteral(@"                         </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""text"" id=""edit_voucherNo"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Employee Name</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <select name=""employeeName"" id=""edit_employeeName"" class=""form-control"">
                                                    </select>
                                                </div>
                                                <a type=""button"" class=""btn btn-info");
            WriteLiteral("\"");
            BeginWriteAttribute("href", " href=\"", 14341, "\"", 14371, 1);
#nullable restore
#line 234 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
WriteAttributeValue("", 14348, Url.Action("Employee"), 14348, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" target=""_blank"">+</a>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Salary Month</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""month"" id=""edit_salaryMonth"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Cheque No.</label>
                                                </div>
                                                <div class=""col-lg-10"">
  ");
            WriteLiteral(@"                                                  <input type=""text"" id=""edit_chequeNo"" class=""form-control"" required>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""col-lg-6"">
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Date</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""date"" id=""edit_date"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                   ");
            WriteLiteral(@"             <div class=""col-lg-12"">
                                                    <label>Amount</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""number"" id=""edit_amount"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Cash / Bank / a/c</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <select name=""employeeName"" id=""edit_cashOrBank"" class=""form-control"">
                                                    </select>
   ");
            WriteLiteral("                                             </div>\r\n                                                <a type=\"button\" class=\"btn btn-info\"");
            BeginWriteAttribute("href", " href=\"", 17582, "\"", 17589, 0);
            EndWriteAttribute();
            WriteLiteral(@" target=""_blank"">+</a>    
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Cheque Date</label>
                                                </div>
                                                <div class=""col-lg-10"">
                                                    <input type=""date"" id=""edit_chequeDate"" class=""form-control"" required>
                                                </div>
                                            </div>
                                            <div class=""form-group row"">
                                                <div class=""col-lg-12"">
                                                    <label>Narration</label>
                                                </div>
                                                <div class=""col-lg-10"">
  ");
            WriteLiteral(@"                                                  <textarea id=""edit_narration"" class=""form-control"" required>
                                                    </textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""btn btn-white"" data-dismiss=""modal"">Close</button>
                                    <button type=""button"" class=""btn btn-primary"" id=""edit_update"">Update</button>
                                    <button type=""button"" class=""btn btn-primary"" id=""edit_clear"">Clear</button>
                                    <button type=""button"" class=""btn btn-danger"" id=""edit_delete"">Delete</button>
                                </div>
                            </div>
         ");
            WriteLiteral("               </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n");
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51964d0c955292dce28d14351d8d42afcef0b40b30253", async() => {
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "51964d0c955292dce28d14351d8d42afcef0b40b30535", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "51964d0c955292dce28d14351d8d42afcef0b40b31778", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51964d0c955292dce28d14351d8d42afcef0b40b34150", async() => {
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51964d0c955292dce28d14351d8d42afcef0b40b34432", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51964d0c955292dce28d14351d8d42afcef0b40b35592", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51964d0c955292dce28d14351d8d42afcef0b40b36752", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51964d0c955292dce28d14351d8d42afcef0b40b37912", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(document).ready(function () {
            var oTable = $('.dataTables-advanceReg').dataTable({
                pageLength: 100,
                dom: '<""html5buttons""B>lTfgitp',
                buttons: [
                    {
                        text: 'Advance Payment',
                        action: function (e, dt, node, config) {
                            initAdvancePaymentModal();
                            $('#advanceModal').modal('show');
                        }
                    }
                ],
                ""columnDefs"": [
                    /*
                     * full[0]-SL.NO
                     * full[1]-employeeId
                     * full[2]-voucherNo
                     * full[3]-voucherTypeName
                     * full[4]-employeeCode
                     * full[5]-employeeName
                     * full[6]-month
                     * full[7]-amount
                     * full[8]-advancePay");
                WriteLiteral(@"mentId
                     * full[9]-financialYearId
                     */
                    {
                        targets: [0],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
                        targets: [1],
                        render: function (data, type, full) {
                            var voucherTypeName = full[3];
                            return voucherTypeName;
                        },
                    },
                    {
                        targets: [2],
                        render: function (data, type, full) {
                            var employeeCode = full[4];
                            return employeeCode;
                        },
                    },
                    {
                        targets: [3],
                        render: function (data, type, full) {
                            var employee");
                WriteLiteral(@"Name = full[5];
                            return employeeName;
                        },
                    },
                    {
                        targets: [4],
                        render: function (data, type, full) {
                            var month = full[6];
                            return month;
                        },
                    },
                    {
                        targets: [5],
                        render: function (data, type, full) {
                            var amount = full[7];
                            return amount;
                        },
                    }
                ],
            });
            var thisMonth = $('#salaryMonth').val();
            var today = """";
            var thisVoucherNo = """";
            onTableLoad();
            function onTableLoad() {                
                refreshTable("""", """", """", thisMonth, ""All"");
            }

            function VoucherTypeNameComboFill(c");
                WriteLiteral(@"omboData) {
                $('#voucherType option').remove();
                var tbObj = JSON.parse(comboData);
                var string = """";
                for (var i = 0; i < tbObj.length; i++) {
                    string = string + ""<option value='"" + tbObj[i]['voucherTypeId'] + ""'>"" + tbObj[i]['voucherTypeName'] + ""</option>"";
                }
                $('#voucherType').append(string);
            }

            function refreshTable(voucherNo, employeeCode, employeeName, salaryMonth, voucherType) {
                oTable.fnClearTable();
                $.ajax({
                    type: ""POST"",
                    url: """);
#nullable restore
#line 423 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                     Write(Url.Action("GetAttendanceReigsterDetails"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    data: {
                        voucherNo: voucherNo,
                        employeeCode: employeeCode,
                        employeeName: employeeName,
                        salaryMonth: salaryMonth,
                        voucherType: voucherType
                    },
                    dataType: ""json"",
                    success: function (response) {
                        if (response[""success""] == ""false"") {
                            swal(""Failed"", ""Not found"", ""warning"");
                        }
                        else {
                            if (response['ex'] == ""no"") {
                                VoucherTypeNameComboFill(response[""comboData""]);
                                var tbObj = JSON.parse(response[""tableData""]);
                                
                                for (var i = 0; i < tbObj.length; i++) {
                                    var tbArray = ConvertObjectToArray(tbObj[i]);
                   ");
                WriteLiteral(@"                 oTable.fnAddData(tbArray);
                                }
                                trigger_advanceRegister_row_click();
                            } else {
                                alert(response['ex']);
                            }
                        }
                    },
                    error: function (req, status, error) {
                        swal(""Failed"", ""API Server Connection Error"", ""warning"");
                    }
                });
            }

            $(""#btn_Search"").on('click', function () {
                refreshTableByValues();
            });

            function refreshTableByValues() {
                var voucherNo = $(""#advanceVoucherNo"").val();
                var employeeName = $(""#employeeName"").val();
                var voucherTypeVal = $(""#voucherType"").val();
                var voucherType = $(""#voucherType option[value='"" + voucherTypeVal + ""']"").text();
                var employeeCode = $(""#empl");
                WriteLiteral(@"oyeeCode"").val();
                var salaryMonth = $(""#salaryMonth"").val();
                refreshTable(voucherNo, employeeCode, employeeName, salaryMonth, voucherType);
            }

            $(""#btn_Clear"").on('click', function () {
                $(""#advanceVoucherNo"").val("""");
                $(""#employeeName"").val("""");
                $(""#voucherType"").val(""0"");
                $(""#employeeCode"").val("""");
                $(""#salaryMonth"").val(thisMonth);
                onTableLoad();
            });

            // ----------------------------------------------------------//
            //---------------------   Create Modal  ---------------------//
            //-----------------------------------------------------------//
            function initAdvancePaymentModal() {
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name=""__RequestVerificationToken""]', form).val();
                $.ajax({
                    type: ""POST"",
    ");
                WriteLiteral("                url: \"");
#nullable restore
#line 488 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                     Write(Url.Action("GetAdvancePaymentDetails"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    data: {
                        __RequestVerificationToken: token,
                    },
                    dataType: ""json"",
                    success: function (response) {
                        if (response[""success""] == ""true"") {
                            if (response[""ex""] == ""no"") {
                                refreshAdvancePaymentModal(response);
                            }
                            else {
                                alert(response[""ex""]);
                            }
                        } else {
                            swal(""Failed"", ""Not found"", ""warning"");
                        }
                    },
                    error: function (req, status, error) {
                        swal(""Failed"", ""Connection Error"", ""warning"");
                    }
                });
            }

            function refreshAdvancePaymentModal(response) {
                var date = response[""date""];
                ");
                WriteLiteral(@"today = date;
                var employee = response[""employee""];
                var cashOrBank = response[""cashOrBank""];
                var voucherNo = response[""voucherNo""];
                thisVoucherNo = voucherNo;

                Clear(""new"");
                CheckBankOrCash(""new"", false);

                $('#new_employeeName option').remove();
                var employeeObj = JSON.parse(employee);
                var string = """";
                for (var i = 0; i < employeeObj.length; i++) {
                    string = string + ""<option value='"" + employeeObj[i]['employeeId'] + ""'>"" + employeeObj[i]['employeeName'] + ""</option>"";
                }
                $('#new_employeeName').append(string);

                $('#new_cashOrBank option').remove();
                var cashOrBankObj = JSON.parse(cashOrBank);
                string = """";
                for (var i = 0; i < cashOrBankObj.length; i++) {
                    string = string + ""<option value='"" + cashOrBankOb");
                WriteLiteral(@"j[i]['ledgerId'] + ""'>"" + cashOrBankObj[i]['ledgerName'] + ""</option>"";
                }
                $('#new_cashOrBank').append(string);

                $('#new_employeeName').val(-1);
                $('#new_cashOrBank').val(-1);
            }

            $('#new_cashOrBank').on('change', function () {
                $.ajax({
                    type: ""POST"",
                    url: """);
#nullable restore
#line 545 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                     Write(Url.Action("CheckBankOrCash"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    data: {},
                    dataType: ""json"",
                    success: function (response) {
                        if (response[""success""] == ""true"") {
                            if (response[""ex""] == ""no"") {
                                var isBankAccount = response[""isBankAccount""];
                                CheckBankOrCash(""new"", isBankAccount);
                            }
                            else {
                                alert(response[""ex""]);
                            }
                        } else {
                            swal(""Failed"", ""Not found"", ""warning"");
                        }
                    },
                    error: function (req, status, error) {
                        swal(""Failed"", ""Connection Error"", ""warning"");
                    }
                }); 
            });

            function CheckBankOrCash(type, flag) {
                if (flag == true) {
                    $(""#"" + type");
                WriteLiteral(@" +""_chequeDate"").attr('disabled', true);
                    $(""#"" + type +""_chequeNo"").attr('disabled', true);
                    $(""#"" + type +""_chequeNo"").val("""");
                }
                else {
                    $(""#"" + type +""_chequeDate"").attr('disabled', false);
                    $(""#"" + type +""_chequeNo"").attr('disabled', false);
                }
            }

            $(""#new_save"").on('click', function () {
                var voucherNo = $(""#new_voucherNo"").val();
                var employeeId = $(""#new_employeeName"").val();
                var salaryMonth = $(""#new_salaryMonth"").val();
                var chequeNo = $(""#new_chequeNo"").val();
                var date = $(""#new_date"").val();
                var amount = $(""#new_amount"").val();
                var ledgerId = $(""#new_cashOrBank"").val();
                var chequeDate = $(""#new_chequeDate"").val();
                var narration = $(""#new_narration"").val();

                if (checkInputValue(""n");
                WriteLiteral(@"ew"", voucherNo, date, employeeId, amount, ledgerId))
                {
                    swal({
                        title: ""Are you sure?"",
                        text: ""You will be able to save these data"",
                        type: ""warning"",
                        showCancelButton: true,
                        confirmButtonColor: ""#DD6B55"",
                        confirmButtonText: ""Yes, save it!"",
                        closeOnConfirm: false
                    }, function () {
                        var form = $('#__AjaxAntiForgeryForm');
                        var token = $('input[name=""__RequestVerificationToken""]', form).val();
                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 605 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                             Write(Url.Action("SaveAdvancePaymentFunction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                            data: {
                                __RequestVerificationToken: token,
                                voucherNo: voucherNo,
                                employeeId: employeeId,
                                salaryMonth: salaryMonth,
                                chequeNo: chequeNo,
                                date: date,
                                amount: amount,
                                ledgerId: ledgerId,
                                chequeDate: chequeDate,
                                narration: narration
                            },
                            dataType: ""json"",
                            success: function (response) {
                                if (response[""success""] == ""false"") {
                                    swal(""Failed"", ""Database Connection Error"", ""warning"");
                                }
                                else {
                                    if (response[""ex""] ");
                WriteLiteral(@"== ""no"") {
                                        if (response[""message""] != """" && response[""newVoucherNo""] == """") {
                                            $(""#"" + response[""focus""]).focus();
                                            swal(""Warning"", response[""message""], ""warning"");
                                        }
                                        else {
                                            Clear(""new"");
                                            refreshTableByValues();
                                            swal(""Save!"", ""Advance Payment data has been saved."", ""success"");
                                            $('#advanceModal').modal('hide');
                                            if (response[""newVoucherNo""] != """") {
                                                swal(""Warning"", response[""message""], ""warning"");
                                                $(""#new_voucherNo"").val(response[""newVoucherNo""]);
                                       ");
                WriteLiteral(@"     }
                                                
                                        }
                                    }
                                    else
                                        alert(response[""ex""]);
                                }
                            },
                            error: function (req, status, error) {
                                swal(""Failed"", ""Connection Error"", ""warning"");
                            }
                        });
                    });
                }
            });

            $(""#new_clear"").on('click', function () {
                Clear(""new"");
            });

            function Clear(type) {
                $(""#"" + type +""_voucherNo"").val(thisVoucherNo);
                $(""#"" + type +""_voucherNo"").attr('disabled', true);
                $(""#"" + type +""_salaryMonth"").val(thisMonth);
                $(""#"" + type +""_date"").val(today);
                $(""#"" + type +""_chequeDate"").val(t");
                WriteLiteral(@"oday);
                $(""#"" + type +""_employeeName"").val(-1);
                $(""#"" + type +""_cashOrBank"").val(-1);
                $(""#"" + type +""_narration"").val("""");
                $(""#"" + type +""_amount"").val("""");
                $(""#"" + type +""_chequeNo"").val("""");
                $(""#"" + type +""_chequeNo"").attr('disabled', false);
            }

            function checkInputValue(type, voucherNo, date, employeeId, amount, ledgerId) {
                if (voucherNo == """") {
                    $(""#"" + type + ""_voucherNo"").focus();
                    swal(""Warning"", ""Enter advance voucher no"", ""warning"");
                }
                else if (date == """") {
                    swal(""Warning"", ""Select date"", ""warning"");
                }
                else if (employeeId == null) {
                    $(""#"" + type + ""_employeeName"").focus();
                    swal(""Warning"", ""Select employee"", ""warning"");
                }
                else if (amount == """") {
                    $(");
                WriteLiteral(@"""#"" + type + ""_amount"").focus();
                    swal(""Warning"", ""Select amount"", ""warning"");

                }
                else if (ledgerId == null) {
                    $(""#"" + type + ""_cashOrBank"").focus();
                    swal(""Warning"", ""Select Cash/Bank/ac"", ""warning"");
                }
                else
                    return true;
                return false;
            }

            // ----------------------------------------------------------//
            //---------------------    Edit Modal   ---------------------//
            //-----------------------------------------------------------//
            var selAdvancePaymentEditId = -1;
            function trigger_advanceRegister_row_click() {
                 $("".dataTables-advanceReg tbody tr"").on(""click"", null, function () {
                     var trPos = oTable.fnGetPosition(this);
                     var aData = oTable.fnGetData(trPos);
                     var advancePaymentId = aData[8];
        ");
                WriteLiteral(@"             selAdvancePaymentEditId = advancePaymentId;

                     var form = $('#__AjaxAntiForgeryForm');
                     var token = $('input[name=""__RequestVerificationToken""]', form).val();
                     $.ajax({
                        type: ""POST"",
                        url: """);
#nullable restore
#line 712 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                         Write(Url.Action("GetAdvancePaymentEditDetails"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            __RequestVerificationToken: token,
                            advancePaymentEditId : advancePaymentId
                        },
                        dataType: ""json"",
                        success: function (response) {
                            if (response[""success""] == ""true"") {
                                if (response[""ex""] == ""no"") {
                                    refreshAdvanceEditModal(response[""data""]);
                                }
                                else {
                                    alert(response[""ex""]);
                                }
                            } else {
                                swal(""Failed"", ""Not found"", ""warning"");
                            }
                        },
                        error: function (req, status, error) {
                            swal(""Failed"", ""Connection Error"", ""warning"");
                        }
           ");
                WriteLiteral(@"          });
                     $('#advanceEdit').modal('show');
                });
            }

            function refreshAdvanceEditModal(response) {
                var voucherNo = response[""voucherNo""];
                var employee = response[""employee""];
                var employeeId = response[""employeeId""];
                var salaryMonth = response[""salaryMonth""];
                var chequeNo = response[""chequeNo""];
                var date = response[""date""];
                var amount = response[""amount""];
                var cashOrBank = response[""cashOrBank""];
                var ledgerId = response[""ledgerId""];
                var chequeDate = response[""chequeDate""];
                var narration = response[""narration""];
                var isAutomatic = response[""isAutomatic""];
                CheckBankOrCash(""edit"", response[""isBankAccount""]);

                $(""#edit_voucherNo"").val(voucherNo);                
                $(""#edit_salaryMonth"").val(salaryMont");
                WriteLiteral(@"h);
                $(""#edit_date"").val(date);
                $(""#edit_chequeDate"").val(chequeDate);
                $(""#edit_chequeNo"").val(chequeNo);
                $(""#edit_amount"").val(amount);
                $(""#edit_narration"").val(narration);

                if (isAutomatic)
                    $(""#edit_voucherNo"").attr('disabled', true);
                else
                    $(""#edit_voucherNo"").attr('disabled', false);

                $('#edit_employeeName option').remove();
                var employeeObj = JSON.parse(employee);
                var string = """";
                for (var i = 0; i < employeeObj.length; i++) {
                    string = string + ""<option value='"" + employeeObj[i]['employeeId'] + ""'"";
                    string = string + "">"" + employeeObj[i]['employeeName'] + ""</option>"";
                }
                $('#edit_employeeName').append(string);
                $('#edit_employeeName').val(employeeId);

                $('#edit_cashOrBank o");
                WriteLiteral(@"ption').remove();
                var cashOrBankObj = JSON.parse(cashOrBank);
                string = """";
                for (var i = 0; i < cashOrBankObj.length; i++) {
                    string = string + ""<option value='"" + cashOrBankObj[i]['ledgerId'] + ""'"";
                    string = string + "">"" + cashOrBankObj[i]['ledgerName'] + ""</option>"";
                }
                $('#edit_cashOrBank').append(string);
                $('#edit_cashOrBank').val(ledgerId);
            }

            $(""#edit_update"").on('click', function () {
                var voucherNo = $(""#edit_voucherNo"").val();
                var employeeId = $(""#edit_employeeName"").val();
                var salaryMonth = $(""#edit_salaryMonth"").val();
                var chequeNo = $(""#edit_chequeNo"").val();
                var date = $(""#edit_date"").val();
                var amount = $(""#edit_amount"").val();
                var ledgerId = $(""#edit_cashOrBank"").val();
                var chequeDate = $(""#edit_c");
                WriteLiteral(@"hequeDate"").val();
                var narration = $(""#edit_narration"").val();

                if (checkInputValue(""edit"", voucherNo, date, employeeId, amount, ledgerId))
                {
                    swal({
                        title: ""Are you sure?"",
                        text: ""You will be able to update these data"",
                        type: ""warning"",
                        showCancelButton: true,
                        confirmButtonColor: ""#DD6B55"",
                        confirmButtonText: ""Yes, update it!"",
                        closeOnConfirm: false
                    }, function () {
                        var form = $('#__AjaxAntiForgeryForm');
                        var token = $('input[name=""__RequestVerificationToken""]', form).val();
                        $.ajax({
                            type: ""POST"",
                            url: """);
#nullable restore
#line 813 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                             Write(Url.Action("EditAdvancePaymentFunction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                            data: {
                                __RequestVerificationToken: token,
                                voucherNo: voucherNo,
                                employeeId: employeeId,
                                salaryMonth: salaryMonth,
                                chequeNo: chequeNo,
                                date: date,
                                amount: amount,
                                ledgerId: ledgerId,
                                chequeDate: chequeDate,
                                narration: narration,
                                advancePaymentEditId: selAdvancePaymentEditId
                            },
                            dataType: ""json"",
                            success: function (response) {
                                if (response[""success""] == ""false"") {
                                    swal(""Failed"", ""Database Connection Error"", ""warning"");
                                }
               ");
                WriteLiteral(@"                 else {
                                    if (response[""ex""] == ""no"") {
                                        if (response[""message""] != """") {
                                            $(""#"" + response[""focus""]).focus();
                                            swal(""Warning"", response[""message""], ""warning"");
                                        }
                                        else {
                                            refreshTableByValues();
                                            swal(""Update!"", ""Advance Payment data has been updated."", ""success"");
                                            $('#advanceEdit').modal('hide');
                                            $(""#edit_voucherNo"").focus();
                                        }
                                    }
                                    else
                                        alert(response[""ex""]);
                                }
                            },
");
                WriteLiteral(@"                            error: function (req, status, error) {
                                swal(""Failed"", ""Connection Error"", ""warning"");
                            }
                        });
                    });
                }
            });

             $(""#edit_delete"").on(""click"", null, function () {
                 var voucherNo = $(""#edit_voucherNo"").val();
                 var employeeId = $(""#edit_employeeName"").val();
                 var salaryMonth = $(""#edit_salaryMonth"").val();

                 swal({
                    title: ""Are you sure?"",
                    text: ""You will not be able to recover these data!"",
                    type: ""warning"",
                    showCancelButton: true,
                    confirmButtonColor: ""#DD6B55"",
                    confirmButtonText: ""Yes, delete it!"",
                    closeOnConfirm: false
                }, function () {
                    var form = $('#__AjaxAntiForgeryForm');
                 ");
                WriteLiteral("   var token = $(\'input[name=\"__RequestVerificationToken\"]\', form).val();\r\n                    $.ajax({\r\n                        type: \"POST\",\r\n                        url: \"");
#nullable restore
#line 875 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\AdvanceRegister.cshtml"
                         Write(Url.Action("DeleteAdvancePaymentFunction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            __RequestVerificationToken: token,
                            voucherNo: voucherNo,
                            employeeId: employeeId,
                            salaryMonth: salaryMonth
                        },
                        dataType: ""json"",
                        success: function (response) {
                            if (response[""success""] == ""false"") {
                                alert(response[""ex""]);
                            }
                            else {
                                if (response[""message""] == """") {
                                    refreshTableByValues();
                                    swal(""Delete!"", ""Deleted successfully"", ""success"");
                                }
                                else {
                                    swal(""Warning"", response[""message""], ""warning"");
                                    $(""#edit_salaryMonth"").focus();
  ");
                WriteLiteral(@"                              }
                                    
                            }
                        },
                        error: function (req, status, error) {
                            swal(""Failed"", ""API Server Connection Error"", ""warning"");
                        }
                    });
                });
            })

            $(""#edit_clear"").on('click', function () {
                Clear(""edit"");
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
