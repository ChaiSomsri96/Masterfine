#pragma checksum "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b0335af46cd759c4e79f8f613fa0d99d0a1a7d34"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Payroll_BonusDeduction), @"mvc.1.0.view", @"/Views/Payroll/BonusDeduction.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\_ViewImports.cshtml"
using ASPNET_Core_3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
using System.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0335af46cd759c4e79f8f613fa0d99d0a1a7d34", @"/Views/Payroll/BonusDeduction.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"60f8273389c73ee67b936bf8b94df025c2d5af05", @"/Views/_ViewImports.cshtml")]
    public class Views_Payroll_BonusDeduction : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/dataTables/datatables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/sweetalert/dist/sweetalert.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Development,Staging,Production", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/dataTables/datatables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/dataTables/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/sweetalert/dist/sweetalert.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
  
    ViewData["Title"] = "BonusOrDeduction";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 6 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
 using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
                            
}

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"row wrapper border-bottom white-bg page-heading\">\r\n    <div class=\"col-lg-10\">\r\n        <h2>Bonus Deduction</h2>\r\n        <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n                <a");
            BeginWriteAttribute("href", " href=\"", 421, "\"", 455, 1);
#nullable restore
#line 15 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
WriteAttributeValue("", 428, Url.Action("Main", "Home"), 428, 27, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">Home</a>
            </li>
            <li class=""breadcrumb-item"">
                <a>Payroll</a>
            </li>
            <li class=""active breadcrumb-item"">
                <strong>Bonus or Deduction Register</strong>
            </li>
        </ol>
    </div>
    <div class=""col-lg-2"">

    </div>
</div>
<div class=""wrapper wrapper-content animated fadeInRight"">
    <div class=""row"">
        <div class=""col-lg-12"">
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-down""></i>
                        </a>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"" style=""display:none;"">
                    <div class=""modal-body"">
             ");
            WriteLiteral(@"           <div class=""row"">
                            <div class=""col-lg-6"">
                                <div class=""form-group container-fluid"">
                                    <label>Employee Name</label>
                                    <select class=""form-control"" id=""employee_name""></select>
                                </div>
                            </div>
                            <div class=""col-lg-6"">
                                <div class=""form-group container-fluid"">
                                    <label>Month</label>
                                    <input type=""month""");
            BeginWriteAttribute("value", " value=\"", 2112, "\"", 2138, 1);
#nullable restore
#line 55 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
WriteAttributeValue("", 2120, ViewData["month"], 2120, 18, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""form-control"" id=""monthpicker"">
                                </div>
                            </div>
                        </div>
                    </div>                    
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-info"" id=""btn_Search"">Search</button>
                        <button type=""button"" class=""btn btn-info"" id=""btn_Clear"">Clear</button>
                    </div>
                </div>
            </div>
            <div class=""ibox "">
                <div class=""ibox-title"">
                    <div class=""ibox-tools"">
                        <a class=""collapse-link"">
                            <i class=""fa fa-chevron-up""></i>
                        </a>
                        <a class=""close-link"">
                            <i class=""fa fa-times""></i>
                        </a>
                    </div>
                </div>
                <div class=""ibox-content"">                ");
            WriteLiteral(@"    
                    <table class=""table table-striped table-bordered table-hover dataTables-bonusDeductionReg"">
                        <thead>
                            <tr>
                                <th>Sl No</th>
                                <th>Employee Code</th>
                                <th>Employee Name</th>
                                <th>Month</th>
                                <th>Bonus</th>
                                <th>Deduction</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <div class=""modal inmodal fade"" id=""bonusDeductionModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
                        <div class=""modal-dialog modal-dialog-bonusDeduction"">
                            <div class=""modal-content modal-content-bonusDeduction"">
                                <div class=""modal-header"">
            ");
            WriteLiteral(@"                        <button type=""button"" class=""close"" data-dismiss=""modal""><span aria-hidden=""true"">&times;</span><span class=""sr-only"">Close</span></button>
                                    <h4 class=""modal-title"">Bonus / Deduction</h4>
                                    <small class=""font-bold"" id=""sub_title"">Create Bonus or Deduction</small>
                                </div>
                                <div class=""modal-body"">
                                    <div class=""row"">
                                        <div class=""col-lg-6"">
                                            <div class=""form-group"">
                                                <label>Date</label>
                                                <input type=""date"" id=""bonus_date"" class=""form-control"" required>
                                            </div>
                                            <div class=""form-group"">
                                                <label>Month</label>
 ");
            WriteLiteral(@"                                               <input type=""month"" id=""bonus_month"" class=""form-control"" required>
                                            </div>
                                            <div class=""form-group"">
                                                <label>Deduction Amount</label>
                                                <input type=""number"" id=""deduction_amount"" class=""form-control"" required>
                                            </div>
                                        </div>
                                        <div class=""col-lg-6"">
                                            <div class=""form-group"">
                                                <label>Employee Code</label>
                                                <select name=""employeeCode"" id=""bonus_employeeCode"" class=""form-control"">
                                                </select>
                                            </div>
                                    ");
            WriteLiteral(@"        <div class=""form-group"">
                                                <label>Bonus Amount</label>
                                                <input type=""number"" id=""bonus_amount"" class=""form-control"" required>
                                            </div>
                                            <div class=""form-group"">
                                                <label>Narration</label>
                                                <textarea id=""bonus_narration"" class=""form-control"" required></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""btn btn-white"" data-dismiss=""modal"">Close</button>
                                    <button type=""submit"" class=""btn btn-primary"" id=""bonus_save"">Save</button>
  ");
            WriteLiteral(@"                                  <button type=""button"" class=""btn btn-primary"" id=""bonus_clear"">Clear</button>
                                    <button type=""button"" class=""btn btn-danger"" id=""bonus_delete"">Delete</button>
                                </div>
                            </div>
                        </div>
                    </div>                    
                </div>
            </div>
        </div>
    </div>

</div>

");
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3415930", async() => {
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3416212", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3417455", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3419827", async() => {
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3420109", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3421269", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3422429", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b0335af46cd759c4e79f8f613fa0d99d0a1a7d3423589", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(document).ready(function () {
            var tr = null;
            var oTable = $('.dataTables-bonusDeductionReg').dataTable({
                pageLength: 100,
                dom: '<""html5buttons""B>lTfgitp',
                buttons: [
                    {
                        text: 'Bonus / Deduction',
                        action: function (e, dt, node, config) {
                            initBonusDeductionModal();
                            $('#bonusDeductionModal').modal('show');
                        }
                    }
                ],
                ""columnDefs"": [
                    /*
                     * full[0]-SL.NO
                     * full[1]-employeeCode
                     * full[2]-employeeName
                     * full[3]-month
                     * full[4]-bonus
                     * full[5]-deduction
                     * full[6]-deductionId
                     */
                    ");
                WriteLiteral(@"{
                        targets: [0],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
                        targets: [1],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
                        targets: [2],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
                        targets: [3],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
                        targets: [4],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
 ");
                WriteLiteral(@"                       targets: [5],
                        render: function (o, v) {
                            return o;
                        },
                    }
                ],
            });

            var bonusDeductionId = 0;
            var thisMonth = $(""#monthpicker"").val();
            initTable();

            $(""#btn_Search"").on('click', function () {
                searchTable();
            });

            $(""#btn_Clear"").on('click', function () {
                $(""#employee_name"").val(0);
                $(""#monthpicker"").val(thisMonth);
                searchTable();
            });

            $(""#bonus_clear"").on('click', function () {
                initBonusDeductionModal();
            });

            $(""#bonus_save"").on('click', function () {
                var btnStatus = $(""#bonus_save"").text();
                var employeeId = $('#bonus_employeeCode').val();;
                var date = $(""#bonus_date"").val();
                var mon");
                WriteLiteral(@"th = $(""#bonus_month"").val();
                var bonusAmount = $(""#bonus_amount"").val();
                var deductionAmount = $(""#deduction_amount"").val();
                var narration = $(""#bonus_narration"").val();
                var bonusId = """";
                if (btnStatus == ""Update"")
                    bonusId = bonusDeductionId;
                onSaveOrEditBonusDeduction(btnStatus, employeeId, date, month,
                    bonusAmount, deductionAmount, narration, bonusId);
            });

            $(""#bonus_delete"").on(""click"", null, function () {
                var employeeId = $('#bonus_employeeCode').val();
                var month = $(""#bonus_month"").val();
                swal({
                    title: ""Are you sure?"",
                    text: ""You will not be able to recover these data!"",
                    type: ""warning"",
                    showCancelButton: true,
                    confirmButtonColor: ""#DD6B55"",
                    confirmButtonText: """);
                WriteLiteral(@"Yes, delete it!"",
                    closeOnConfirm: false
                }, function () {
                    var form = $('#__AjaxAntiForgeryForm');
                    var token = $('input[name=""__RequestVerificationToken""]', form).val();
                    $.ajax({
                        type: ""POST"",
                        url: """);
#nullable restore
#line 277 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
                         Write(Url.Action("DeleteBonusDeduction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            __RequestVerificationToken: token,
                            employeeId: employeeId,
                            month: month
                        },
                        dataType: ""json"",
                        success: function (response) {
                            if (response[""success""] == ""false"") {
                                alert(response[""ex""]);
                            }
                            else {
                                if (response[""message""] == """") {
                                    initTable();
                                    swal(""Delete!"", ""Deleted successfully"", ""success"");
                                    $('#bonusDeductionModal').modal('hide');
                                }
                                else {
                                    swal(""Warning"", response[""message""], ""warning"");
                                }
                                ");
                WriteLiteral(@"    
                            }
                        },
                        error: function (req, status, error) {
                            swal(""Failed"", ""API Server Connection Error"", ""warning"");
                        }
                    });
                });
            })

            function initTable() {
                var month = $(""#monthpicker"").val();
                refreshTable(""All"", month, true);
            }

            function searchTable(){
                var month = $(""#monthpicker"").val();
                var employeeId = $(""#employee_name"").val();
                var employeeName;
                if (employeeId == null || employeeId == ""0"")
                    employeeName = ""All"";
                else
                    employeeName = $(""#employee_name option[value='"" + employeeId + ""']"").text();
                refreshTable(employeeName, month, false);
            }

            function refreshTable(employeeName, month, comboRedraw) {");
                WriteLiteral(@"
                oTable.fnClearTable();
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name=""__RequestVerificationToken""]', form).val();
                $.ajax({
                    type: ""POST"",
                    url: """);
#nullable restore
#line 329 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
                     Write(Url.Action("GetBonusDeductionRegister"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    data: {
                        __RequestVerificationToken: token,
                        employeeName: employeeName,
                        month: month
                    },
                    dataType: ""json"",
                    success: function (response) {
                        if (response[""success""] == ""true"") {
                            var tbObj = JSON.parse(response[""tableData""]);
                            var employeeObj = JSON.parse(response[""comboData""]);
                            
                            if (comboRedraw){
                                $('#employee_name option').remove();
                                var string = ""<option value='0'>All</option>"";
                                for (var i = 0; i < employeeObj.length; i++) {
                                    string = string + ""<option value='"" + employeeObj[i]['employeeId'] + ""'"";
                                    string = string + "">"" + employeeObj[i]['employeeNam");
                WriteLiteral(@"e'] + ""</option>"";
                                }
                                $('#employee_name').append(string);
                            }
                            
                            for (var i = 0; i < tbObj.length; i++) {
                                var tbArray = ConvertObjectToArray(tbObj[i]);
                                oTable.fnAddData(tbArray);
                            }
                        } else {
                            swal(""Failed"", ""Not found"", ""warning"");
                        }
                    },
                    error: function (req, status, error) {
                        swal(""Failed"", ""Connection Error"", ""warning"");
                    }
                });
            }

            function initBonusDeductionModal() {
                clearButtons(""new"");
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name=""__RequestVerificationToken""]', form).val();
                $.a");
                WriteLiteral("jax({\r\n                    type: \"POST\",\r\n                    url: \"");
#nullable restore
#line 371 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
                     Write(Url.Action("BonusDeduction_Load"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    data: {
                        __RequestVerificationToken: token,
                    },
                    dataType: ""json"",
                    success: function (response) {
                        if (response[""success""] == ""true"") {
                            var employeeObj = JSON.parse(response[""comboData""]);
                            var today = response[""today""];
                            setBonusDeductionModal(today, thisMonth, """", employeeObj, """", """");
                            
                        } else {
                            swal(""Failed"", ""Not found"", ""warning"");
                        }
                    },
                    error: function (req, status, error) {
                        swal(""Failed"", ""Connection Error"", ""warning"");
                    }
                });
            }

            function clearButtons(type) {
                if (type == ""new"") {
                    $(""#sub_title"").text(""Create Bonus or ");
                WriteLiteral(@"Deduction"");
                    $(""#bonus_save"").text(""Save"");
                    $(""#bonus_delete"").hide();
                    $(""#bonus_month"").attr('disabled', false);
                    $(""#bonus_employeeCode"").attr('disabled', false);
                }
                else {
                    $(""#sub_title"").text(""Edit Bonus or Deduction"");
                    $(""#bonus_save"").text(""Update"");
                    $(""#bonus_delete"").show();
                    $(""#bonus_month"").attr('disabled', true);
                    $(""#bonus_employeeCode"").attr('disabled', true);
                }
            }

            function setBonusDeductionModal(date, month, deductionAmount, employeeObj, bonusAmount, narration) {
                $(""#bonus_date"").val(date);
                $(""#bonus_month"").val(month);
                $(""#deduction_amount"").val(deductionAmount);
                $(""#bonus_amount"").val(bonusAmount);
                $(""#bonus_narration"").val(narration);

            ");
                WriteLiteral(@"    $('#bonus_employeeCode option').remove();
                var string = """";
                for (var i = 0; i < employeeObj.length; i++) {
                    string = string + ""<option value='"" + employeeObj[i]['employeeId'] + ""'"";
                    string = string + "">"" + employeeObj[i]['employeeCode'] + ""</option>"";
                }
                $('#bonus_employeeCode').append(string);
                $('#bonus_employeeCode').val(-1);
            }

            function onSaveOrEditBonusDeduction(btnStatus, employeeId, date, month,
                bonusAmount, deductionAmount, narration, bonusId) {
                swal({
                    title: ""Are you sure?"",
                    text: ""You will be able to "" + btnStatus.toLowerCase() + "" these data!"",
                    type: ""warning"",
                    showCancelButton: true,
                    confirmButtonColor: ""#DD6B55"",
                    confirmButtonText: ""Yes, "" + btnStatus.toLowerCase() + "" it!"",
            ");
                WriteLiteral(@"        closeOnConfirm: false
                }, function () {
                    var form = $('#__AjaxAntiForgeryForm');
                    var token = $('input[name=""__RequestVerificationToken""]', form).val();
                    $.ajax({
                        type: ""POST"",
                        url: """);
#nullable restore
#line 441 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
                         Write(Url.Action("SaveOrEditBonusDeduction"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                        data: {
                            __RequestVerificationToken: token,
                            btnStatus: btnStatus,
                            employeeId: employeeId,
                            date: date,
                            month: month,
                            bonusAmount: bonusAmount,
                            deductionAmount: deductionAmount,
                            narration: narration,
                            bonusId: bonusId
                        },
                        dataType: ""json"",
                        success: function (response) {
                            if (response[""success""] == ""false"") {
                                swal(""Failed"", ""Not found"", ""warning"");
                            }
                            else {
                                if (response[""ex""] == ""no"") {

                                    if (response[""message""] == """") {
                                        initTable()");
                WriteLiteral(@";
                                        swal(btnStatus + ""!"", ""Attendance data has been "" + btnStatus.toLowerCase() + ""d."", ""success"");
                                        $('#bonusDeductionModal').modal('hide');
                                    }
                                    else
                                        swal(""Failed"", response[""message""], ""warning"");
                                }
                                else
                                    alert(response[""ex""]);
                            }
                        },
                        error: function (req, status, error) {
                            swal(""Failed"", ""Connection Error"", ""warning"");
                        }
                    });
                });
            }

            $('.dataTables-bonusDeductionReg tbody').on('click', 'td', function () {
                var trPos = oTable.fnGetPosition(this);
                var aData = oTable.fnGetData(trPos);
             ");
                WriteLiteral(@"   bonusDeductionId = aData[6];
                                       
                clearButtons(""edit"");
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name=""__RequestVerificationToken""]', form).val();
                $.ajax({
                    type: ""POST"",
                    url: """);
#nullable restore
#line 490 "C:\Users\george\Documents\Source\Data\Data_Current\Masterfine\Views\Payroll\BonusDeduction.cshtml"
                     Write(Url.Action("BonusDeductionEdit_Load"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    data: {
                        __RequestVerificationToken: token,
                        bonusDeductionId: bonusDeductionId
                    },
                    dataType: ""json"",
                    success: function (response) {
                        if (response[""success""] == ""true"") {
                            if (response[""ex""] == ""no"") {
                                var employeeObj = JSON.parse(response[""data""][""employeeCodes""]);
                                setBonusDeductionModal(response[""data""][""date""], response[""data""][""month""], response[""data""][""deductionAmount""],
                                    employeeObj, response[""data""][""bonusAmount""], response[""data""][""narration""]);

                                $('#bonus_employeeCode').val(response[""data""][""employeeId""]);
                            }
                            else
                                alert(response[""ex""]);                               
                        } e");
                WriteLiteral(@"lse {
                            swal(""Failed"", ""Not found"", ""warning"");
                        }
                    },
                    error: function (req, status, error) {
                        swal(""Failed"", ""Connection Error"", ""warning"");
                    }
                });
                $('#bonusDeductionModal').modal('show');
            });            
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
