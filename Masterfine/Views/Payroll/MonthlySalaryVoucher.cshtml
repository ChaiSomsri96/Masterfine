@using System.Data
@{
    ViewData["Title"] = "MonthlySalaryVoucher";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Monthly Salary Voucher</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Main", "Home")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Payroll</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Monthly Salary Voucher</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-down"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div id="monthly_salary_voucher_filter" class="ibox-content" style="display:none;">
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group"><label>Voucher Date From</label> <input type="date" placeholder="" value="@ViewData["date"]" name="voucherDateFrom" class="form-control" required></div>
                                <div class="form-group"><label>Salary Month</label> <input type="month" placeholder="" value="@ViewData["dateMonth"]" name="salaryMonth" class="form-control"></div>
                                <div class="form-group">
                                    <label>Cash/Bank a/c</label>
                                    <select name="cash" class="form-control" id="cash">
                                        <option value="All">ALL</option>
                                        <option value="Cash">Cash</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group"><label>Voucher Date To</label> <input type="date" placeholder="" value="@ViewData["date"]" name="voucherDateTo" class="form-control" required></div>
                                <div class="form-group"><label>Voucher No</label> <input type="text" placeholder="" name="voucherNo" class="form-control"></div>
                                <div class="form-group">
                                    <label>Voucher Type</label>
                                    <select name="voucherType" class="form-control" id="voucherType">
                                        <option value="All">ALL</option>
                                        <option value="MonthlySalaryVoucher">Monthly Salary Voucher</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" onclick="on_search_monthly_salary_voucher();">Search</button>
                        <button type="button" class="btn btn-primary" onclick="on_clear_filters_salary_voucher();">Clear</button>
                    </div>
                </div>
            </div>
            <div class="ibox ">
                <div class="ibox-title">
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">

                    <table class="table table-striped table-bordered table-hover dataTables-salaryVoucher">
                        <thead>
                            <tr>
                                <th>SI No</th>
                                <th>Voucher Type</th>
                                <th>Voucher No</th>
                                <th>Date</th>
                                <th>Cash/Bank a/c</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (DataRow row in Model.Rows)
                            {
                            <tr value="@row["salaryVoucherMasterId"]" class="row_data" style="cursor:pointer">
                                <td>@row["Sl No"]</td>
                                <td>@row["voucherTypeName"]</td>
                                <td>@row["voucherNo"]</td>
                                <td>@row["date"]</td>
                                <td>@row["ledgerName"]</td>
                                <td>@row["amount"]</td>
                            </tr>
                            }
                        </tbody>
                    </table>
                    <div class="modal inmodal fade" id="salaryVoucherModal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <h4 class="modal-title">Monthly Salary Voucher</h4>
                                    <small class="font-bold" id="smallDescription">Save monthly salary Voucher</small>
                                </div>
                                
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="form-group col-6"><label>Voucher No</label> <input type="text" placeholder="" name="voucherNo" id="voucherNo" class="form-control" required></div>
                                        <div class="form-group col-6"><label>Voucher Date</label><input type="date" value="@ViewData["date"]" placeholder="" name="voucherDate" id="voucherDate" class="form-control" required></div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-6"><label>Month</label> <input type="month" value="@ViewData["dateMonth"]" placeholder="" name="month" id="month" class="form-control" required></div>
                                        <div class="form-group col-6">
                                            <label>Cash / Bank a/c</label>

                                            <div class="row">
                                                <select name="cash" class="form-control col-10" id="cash" required>
                                                    <option value="Cash">Cash</option>
                                                </select>
                                                <a type="button" class="btn btn-info" onclick="on_plus_btn_click();" href="" target="_blank">+</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group"><label>Total Amount</label> <textarea class="form-control" name="totalAmount" id="totalAmount" rows="1"></textarea></div>
                                    <div class="form-group"><label>Narration</label> <textarea class="form-control" name="narration" id="narration" rows="3"></textarea></div>
                                    <table class="table table-striped table-bordered table-hover dataTables-mSalaryinter">
                                        <thead>
                                            <tr>
                                                <th>SI No</th>
                                                <th>Employee Code</th>
                                                <th>Employee</th>
                                                <th>Bonus</th>
                                                <th>Deduction</th>
                                                <th>Advance</th>
                                                <th>LOP</th>
                                                <th>Salary</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (DataRow row in Model.Rows)
                                            {
                                                <tr value="@row["masterId"]" class="row_data" style="cursor:pointer">
                                                    <td>@row["Sl No"]</td>
                                                    <td>@row["employeeCode"]</td>
                                                    <td>@row["employeeName"]</td>
                                                    <td>@row["bonusAmount"]</td>
                                                    <td>@row["deductionAmount"]</td>
                                                    <td>@row["amount"]</td>
                                                    <td>@row["lop"]</td>
                                                    <td>@row["salary"]</td>
                                                    <td>@row["status"]</td>
                                                </tr>
                                                }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-danger" onclick="on_delete_monthly_salary_voucher();">Delete</button>
                                    <button type="button" class="btn btn-primary" onclick="on_clear_monthly_salary_voucher();">Clear</button>
                                    <button type="submit" class="btn btn-primary" id="btn_saveOrupdate" onclick="on_saveOrupdate_monthly_salary_voucher();">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
        <link rel="stylesheet" href="~/lib/sweetalert/dist/sweetalert.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/dataTables/dataTables.bootstrap4.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
        <script src="~/js/common.js"></script>

    </environment>
    <script type="text/javascript">
        var oTable;
        var tr = null;
        var update = false;
        $(document).ready(function () {
            oTable = $('.dataTables-salaryVoucher').dataTable({
                pageLength: 100,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        text: 'MonthlySalaryVoucher',
                        action: function (e, dt, node, config) {
                            $('#salaryVoucherModal .modal-header #smallDescription').text("Save monthly salary Voucher");
                            $('#salaryVoucherModal .modal-footer #btn_saveOrupdate').text("Save");
                            on_modal_monthly_salary_voucher(false);
                            $('#salaryVoucherModal').modal('show');
                        }
                    }
                ],
                "columnDefs": [
                    /*
                     * full[0]-SL.NO
                     * full[1]-salaryVoucherMasterId
                     * full[2]-ledgerId
                     * full[3]-voucherTypeName
                     * full[4]-voucherNo
                     * full[5]-invoiceNo
                     * full[6]-date
                     * full[7]-month
                     * full[8]-ledgerName
                     * full[9]-account
                     * full[10]-financialYearId
                     */
                    {
                        targets: [0],
                        render: function (o, v) {
                            return o;
                        },
                    },
                    {
                        targets: [1],
                        render: function (data, type, full) {
                            var voucherTypeName = full[3];
                            return voucherTypeName;
                        },
                    },
                    {
                        targets: [2],
                        render: function (data, type, full) {
                            var voucherNo = full[4];
                            return voucherNo;
                        },
                    },
                    {
                        targets: [3],
                        render: function (data, type, full) {
                            var date = full[6];
                            return date;
                        },
                    },
                    {
                        targets: [4],
                        render: function (data, type, full) {
                            var ledgerName = full[8];
                            return ledgerName;
                        },
                    },
                    {
                        targets: [5],
                        render: function (data, type, full) {
                            var account = full[9];
                            return account;
                        },
                    },
                ]
            });
        });
        var trPos = 0;
        var masterID = 0;
        function trigger_voucher_table_row_click() {
            $(".dataTables-salaryVoucher tbody tr").on("click", function () {

                trPos = oTable.fnGetPosition(this);
                if (trPos == undefined) return;
                var aData = oTable.fnGetData(trPos);
                tr = this;
                if (aData == null) {
                    swal("warning", "Refresh the table", "warning");
                    return;
                }
                var id = aData[1];
                masterID = id;
                var voucherNo = aData[4];
                var voucherDate = aData[6];
                var month = aData[7];
                var cash = aData[8];
                var totalAmount = aData[9];
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FillFunction")",
                    data: {
                        __RequestVerificationToken: token,
                        id: id
                    },
                    dataType: "json",
                    success: function (res) {

                        if (res.error == "false") {
                            $("#salaryVoucherModal #voucherNo").val(voucherNo);
                            $("#salaryVoucherModal #voucherDate").val(res.voucherDate);
                            $("#salaryVoucherModal #month").val(res.month);
                            $("#salaryVoucherModal #cash").val(cash);
                            $("#salaryVoucherModal #totalAmount").val(totalAmount);
                            $("#salaryVoucherModal #narration").val(res.narration);
                            refresh_salary_voucherModal_table(res.data);
                        } else {
                            swal("Failed", "Not found", "warning");
                        }
                        $('#salaryVoucherModal .modal-header #smallDescription').text("Update monthly salary Voucher");
                        $('#salaryVoucherModal .modal-footer #btn_saveOrupdate').text("Update");
                        on_modal_monthly_salary_voucher(true);
                        $('#salaryVoucherModal').modal('show');
                    },
                    error: function (req, status, error) {
                        swal("Failed", "Connection Error", "warning");
                    }
                });
                
            });
        }
        function on_search_monthly_salary_voucher() {
            var voucherDateFrom = $("#monthly_salary_voucher_filter input[name='voucherDateFrom']").val();
            var salaryMonth = $("#monthly_salary_voucher_filter input[name='salaryMonth']").val();
            var cash = $("#monthly_salary_voucher_filter select[name='cash']").val();
            var voucherDateTo = $("#monthly_salary_voucher_filter input[name='voucherDateTo']").val();
            var voucherNo = $("#monthly_salary_voucher_filter input[name='voucherNo']").val();
            var voucherType = $("#monthly_salary_voucher_filter select[name='voucherType']").val();
            var token = $('input[name="__RequestVerificationToken"]', $('#__AjaxAntiForgeryForm')).val();
            $.ajax({
                    type: "POST",
                    url: "@Url.Action("SalaryVoucherSearch")",
                    data: {
                        __RequestVerificationToken: token,
                        dateFrom: voucherDateFrom,
                        salaryMonth: salaryMonth,
                        cash: cash,
                        dateTo: voucherDateTo,
                        no: voucherNo,
                        type: voucherType
                    },
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        refresh_salary_filter_table(response["data"]);
                    },
                    error: function (req, status, error) {
                        swal("Failed", "API Server Connection Error", "warning");
                    }
             });

        }
        function refresh_salary_filter_table(data) {
            oTable.fnClearTable(true);
            var tbObj = JSON.parse(data);
            for (var i = 0; i < tbObj.length; i++) {
                var tbArray = ConvertObjectToArray(tbObj[i]);
                oTable.fnAddData(tbArray);
            }
            trigger_voucher_table_row_click();
        }
        function on_clear_filters_salary_voucher() {
            //var today = new Date();
            //var va = today.toLocaleDateString().toString("yyyy-MM-dd");
            $("#monthly_salary_voucher_filter input[name='voucherDateFrom']").text(@ViewData["date"]);
            $("#monthly_salary_voucher_filter input[name='salaryMonth']").text(@ViewData["dateMonth"]);
            $("#monthly_salary_voucher_filter select[name='cash']").val("All");
            $("#monthly_salary_voucher_filter input[name='voucherDateTo']").text(@ViewData["date"]);
            $("#monthly_salary_voucher_filter input[name='voucherNo']").val("");
            $("#monthly_salary_voucher_filter select[name='voucherType']").val("All");
            $(".dataTables-salaryVoucher tbody").remove();
            $(".dataTables-salaryVoucher").append("<tbody>");
        }
        function on_clear_monthly_salary_voucher() {
            $("#salaryVoucherModal #voucherDate").text(@ViewData["date"]);
            $("#salaryVoucherModal #cash").val("");
            $("#salaryVoucherModal #narration").val("");
            $("#salaryVoucherModal #totalAmount").val("0.00");
            $("#salaryVoucherModal table tbody").remove();
            $("#salaryVoucherModal table").append("<tbody>");
        }
        function on_modal_monthly_salary_voucher(bUpdate) {
            update = bUpdate;
            var voucherNo = $("#salaryVoucherModal #voucherNo").val();
            $("#salaryVoucherModal #voucherNo").attr("disabled", bUpdate);
            var voucherDate = $("#salaryVoucherModal #voucherDate").val();
            if (voucherDate == "0001-01-01") {
                swal("warning", "Refresh the table", "warning");
            }
            var voucherMonth;
            $("#salaryVoucherModal #month").attr("disabled", bUpdate);
            var token = $('input[name="__RequestVerificationToken"]', $('#__AjaxAntiForgeryForm')).val();
            $('#salaryVoucherModal .btn-danger').attr("disabled", !bUpdate);
            $("#salaryVoucherModal #totalAmount").attr("disabled", true);
            if (!bUpdate)
                on_clear_monthly_salary_voucher();
            //if (bUpdate == false) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetVoucherNo")",
                data: {
                    __RequestVerificationToken: token,
                    voucherNo: voucherNo,
                    voucherDate: voucherDate,
                    editMode: bUpdate
                },
                dataType: "json",
                success: function (response) {
                    voucherNo = response["voucherNo"];
                    $("#salaryVoucherModal #voucherNo").val(voucherNo);
                    $("#salaryVoucherModal #voucherDate").text(@ViewData["date"]);
                    
                    $("#salaryVoucherModal #month").text(@ViewData["dateMonth"]);
                    voucherMonth = $("#salaryVoucherModal #month").val();
                    if (bUpdate == false)
                        $("#salaryVoucherModal #totalAmount").val("0.00");
                    if (bUpdate == false)
                        getData_salary_voucherModal_table(voucherNo, voucherMonth);
                },
                error: function (req, status, error) {
                    swal("Failed", "API Server Connection Error", "warning");
                }
            });
            
            //}

        }
        function getData_salary_voucherModal_table(voucherNo, month) {
            var token = $('input[name="__RequestVerificationToken"]', $('#__AjaxAntiForgeryForm')).val();
            $.ajax({
                    type: "POST",
                    url: "@Url.Action("RefreshModalTable")",
                    data: {
                        __RequestVerificationToken: token,
                        voucherNo: voucherNo,
                        month: month
                    },
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        refresh_salary_voucherModal_table(response.data);
                    },
                    error: function (req, status, error) {
                        swal("Failed", "API Server Connection Error", "warning");
                    }
             });

        }
        function refresh_salary_voucherModal_table(data) {
            $("#salaryVoucherModal table tbody").remove();
            $("#salaryVoucherModal table").append("<tbody>");
            if (data == null || data == "") {
                return;
            }
            var info = JSON.parse(data);
            if (info == null || info == "") {
                return;
            }
            var string = "";
            var detailsID = "";
            if (info[0]["detailsId"] != null)
                detailsID = info[0]["detailsId"].toString();
            for (var i = 0; i < info.length; i++) {
                string = '<tr ' + 'value="' + info[i]["masterId"] + '"name="' + info[i]["detailsId"] + '"href="' + info[i]["employeeId"] + '" class="row_data" style="cusor:pointer">';
                string = string + "<td>" + info[i]["SlNo"] + "</td>";
                string = string + "<td>" + info[i]["employeeCode"] + "</td>";
                string = string + "<td>" + info[i]["employeeName"] + "</td>";
                string = string + "<td>" + info[i]["bonusAmount"] + "</td>";
                string = string + "<td>" + info[i]["deductionAmount"] + "</td>";
                string = string + "<td>" + info[i]["amount"] + "</td>";
                string = string + "<td>" + info[i]["lop"] + "</td>";
                string = string + "<td>" + info[i]["salary"] + "</td>";
                string = string + "<td>" + make_status_selects(info[i]["status"].toString() == "Paid" ? "Paid" : "Pending") + "</td>";
                string = string + '</tr>';
                $("#salaryVoucherModal table tbody").append(string);
                trigger_status_select();
            }
        }
        function make_status_selects(status_string) {
            var string = "";
            string = "<select name='select_status' old-value='" + status_string + "' style='width:100%;'>";

            string = string + "<option value='" + status_string + "' selected>" + status_string + "</option>";
            var strOther = (status_string != "Paid" ? "Paid" : "Pending");
            string = string + "<option value='" + strOther.toString() + "'>" + strOther.toString() + "</option>";

            string = string + "</select>";

            return string;
        }
        function trigger_status_select() {
            $("#salaryVoucherModal table tbody select[name='select_status']").on('change', function () {
                on_calc_salary_totalAmount();
            });
        }
        function on_delete_monthly_salary_voucher() {
            var id = masterID;
            var rows = $('#salaryVoucherModal table tbody tr');
            if (rows.length <= 0) {
                swal("Failed", "No Data", "warning");
                return;
            }
            var voucherNo = $("#salaryVoucherModal #voucherNo").val();
            var voucherDate = $("#salaryVoucherModal #voucherDate").val();
            var cash = $("#salaryVoucherModal #cash").val();
            var month = $("#salaryVoucherModal #month").val();
            var dataArray = new Array();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this monthly salary Voucher!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            }, function () {
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteMonthlySalaryVoucher")",
                    data: {
                        __RequestVerificationToken: token,
                        id: id,
                        strVoucherNo: voucherNo,
                        dptMonth: month,
                        dptVoucherDate: voucherDate,
                        cash: cash,
                        editMode: update
                    },
                    dataType: "text",
                    success: function (msg) {

                        if (msg.error == "success") {
                            swal("Deleted!", "Selected Monthly Salary Voucher has been deleted.", "success");
                        }
                        else if (msg.error == "failed") {
                            swal("Failed", "You can't delete, reference exist.", "warning");
                        }
                        on_clear_monthly_salary_voucher();
                    },
                    error: function (req, status, error) {
                        swal("Failed", "API Server Connection Error", "warning");
                    }
                });
                
            });
        }
        function on_saveOrupdate_monthly_salary_voucher() {
            var rows = $('#salaryVoucherModal table tbody tr');
            var cash = $("#salaryVoucherModal #cash").val();
            if (cash == null || cash == ""){
                swal("Failed", "Please fill Cash/Bank a/c!!", "warning");
                return;
            }
                
            if (rows.length <= 0) {
                swal("Failed", "No Data", "warning");
                return;
            }
           
            var voucherNo = $("#salaryVoucherModal #voucherNo").val();
            var voucherDate = $("#salaryVoucherModal #voucherDate").val();
            
            var cashNum = 0;
            if (cash != null && cash.toString() == "Cash")
                cashNum = 1;
            var month = $("#salaryVoucherModal #month").val();
            var totalAmount = $("#salaryVoucherModal #totalAmount").val();
            var narration = $("#salaryVoucherModal #narration").val();
            var dataArray = new Array();

            for (var i = 0; i < rows.length; i++) {
                var newArray = new Array();
                var tr = rows[i];
                var masterId = tr.attributes['value'].nodeValue;
                var detailsId = tr.attributes['name'].nodeValue;
                var employeeId = tr.attributes['href'].nodeValue;
                var nodeArray = tr.children;
                if (nodeArray == null || nodeArray.length == 0) {
                    continue;
                }
                var status = nodeArray[8].childNodes[0].value;
                newArray.push({
                    txtEmployeeId: employeeId, txtBonus: nodeArray[3].innerText, txtDeduction: nodeArray[4].innerText,
                    txtAdvance: nodeArray[5].innerText, txtLop: nodeArray[6].innerText, txtSalary: nodeArray[7].innerText,
                    cmbStatus: status, txtMasterId: masterId, txtDetailsId: detailsId, voucherNo: voucherNo,
                    voucherDate: voucherDate, month: month, cash: cashNum, totalAmount: totalAmount, narration: narration
                });
                dataArray.push(newArray);
            }
            var jsonData = JSON.stringify(dataArray);
            swal({
                title: "Are you sure?",
                text: "You will be able to save or update this monthly salary Voucher!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                closeOnConfirm: false
            }, function () {
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveOrEdit")",
                    data: {
                        __RequestVerificationToken: token,
                        masterId: masterID,
                        tableData: jsonData,
                        editMode: update
                    },
                    dataType: "json",
                    success: function (msg) {

                        if (msg.error == "success") {
                            swal("Saved!", "Monthly Salary Voucher has been saved or updated.", "success");
                            $('#salaryVoucherModal').modal('hide');
                            on_search_monthly_salary_voucher();
                        }
                        else if (msg.error == "error") {
                            swal("Failed", "You can't save or update, reference exist.", "warning");
                        }
                    },
                    error: function (req, status, error) {
                        swal("Failed", "API Server Connection Error", "warning");
                    }
                });

            });

        }
        function on_plus_btn_click() {
            alert("This function is not allowed because of ledger account interface!");

        }
        function on_calc_salary_totalAmount() {
            var rows = $('#salaryVoucherModal table tbody tr');
            if (rows.length <= 0) {
                return;
            }
            var dataArray = new Array();

            for (var i = 0; i < rows.length; i++) {
                var newArray = new Array();
                var tr = rows[i];

                var nodeArray = tr.children;
                if (nodeArray == null || nodeArray.length == 0) {
                    continue;
                }
                var status = nodeArray[8].childNodes[0].value;
                newArray.push({
                    txtSalary: nodeArray[7].innerText, cmbStatus: status
                });
                dataArray.push(newArray);
            }
            var jsonData = JSON.stringify(dataArray);
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetTotalAmount")",
                data: {
                    __RequestVerificationToken: token,
                    tableData: jsonData
                },
                dataType: "json",
                success: function (msg) {

                    if (msg.error == "success") {
                        $("#salaryVoucherModal #totalAmount").val(msg.total);
                    }
                    else if (msg.error == "error") {
                        swal("Failed", "You can't calc the total amount", "warning");
                    }
                },
                error: function (req, status, error) {
                    swal("Failed", "API Server Connection Error", "warning");
                }
            });
        }
        $("#salaryVoucherModal #month").on("change", null, function () {
            var voucherNo = $("#salaryVoucherModal #voucherNo").val();
            $("#salaryVoucherModal #totalAmount").val("0.00");
            var month = $("#salaryVoucherModal #month").val();
            getData_salary_voucherModal_table(voucherNo, month);
        });
    </script>
}
